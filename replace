#!/bin/bash

set -ueo pipefail

error() {
    printf "%s\n" "$*" >&2
}

ensure_file() {
    for path in "$@"; do
        if [ ! -f "${path}" ] && [ "${path}" != "-" ]; then
            error "no such file: ${path}"
            exit 1
        fi
    done
}

trim_space() {
    cat | sed -E "s/^ +//g" | sed -E "s/ +$//g"
}

generate_symbol() {
    local id
    id="$(head -c 32 < /dev/urandom | od -An -x | tr -d " \n")"
    printf "[[%s]]" "${id}"
}

replace() {
    printf "%s" "${1//"$2"/"$3"}"
}

if [ "$#" -ne 2 ]; then
    error "usage: $0 <source-file> <variables-file>"
    exit 1
fi

source_path="$1"
vars_path="$2"

ensure_file "${source_path}" "${vars_path}"
dollar_sym="$(generate_symbol)"
open_sym="$(generate_symbol)"

text="$(cat "${source_path}")"$'\n'
text="$(replace "${text}" '$$' "${dollar_sym}")"
text="$(replace "${text}" '$' "${open_sym}")"

while read -r line; do
    if [[ "${line}" =~ ^[[:space:]]*\# ]]; then
        continue
    fi
    name="$(cut -d = -f 1 <<< "${line}" | trim_space)"
    value="$(cut -d = -f 2- <<< "${line}" | trim_space)"
    text="$(replace "${text}" "${open_sym}{${name}}" "${value}")"
done < "${vars_path}"

text="$(replace "${text}" "${dollar_sym}" '$')"

printf "%s" "${text}"
